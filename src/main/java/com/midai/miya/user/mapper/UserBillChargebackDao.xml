<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.midai.miya.user.dao.UserBillChargebackDao">
   <resultMap id="BaseResultMap" type="com.midai.miya.user.model.UserBillChargeback">
         <id column="user_bill_chargeback_id" property="userBillChargebackId" jdbcType="VARCHAR" />
         <id column="user_bill_id" property="userBillId" jdbcType="VARCHAR" />
         <id column="user_id" property="userId" jdbcType="VARCHAR" />
         <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
         <result column="user_bill_chargeback_state" property="userBillChargebackState" jdbcType="INTEGER" />
         <result column="not_pass_reason" property="notPassReason" jdbcType="VARCHAR" />
         <result column="bill_num" property="billNum" jdbcType="VARCHAR" />
         <result column="bill_state" property="billState" jdbcType="INTEGER" />
         <result column="from_call" property="fromCall" jdbcType="VARCHAR" />
         <result column="from_phone_number" property="fromPhoneNumber" jdbcType="VARCHAR" />
         <result column="user_name" property="userName" jdbcType="VARCHAR" />
         <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
         <result column="operator_name" property="operatorName" jdbcType="VARCHAR" />
         <result column="bill_pay_money" property="billPayMoney" jdbcType="DOUBLE" />
         <result column="bill_pay_moeny_rmb" property="billPayMoneyRmb" jdbcType="DOUBLE" />
         <result column="approve_time" property="approvalTime" jdbcType="TIMESTAMP" />
   </resultMap>
   <sql id="findWhere">
   <where>
   <if test="userBillChargeback.billNum!=null and userBillChargeback.billNum!='' ">
        and t2.bill_num like CONCAT('%',#{userBillChargeback.billNum},'%')
      </if>
      <if test="userBillChargeback.fromPhoneNumber!=null and userBillChargeback.fromPhoneNumber!='' ">
        and t2.from_phone_number like CONCAT('%',#{userBillChargeback.fromPhoneNumber},'%')
      </if>
      <if test="userBillChargeback.billState!=null and userBillChargeback.billState!='' ">
        and t2.bill_state=#{userBillChargeback.billState}
      </if>
      <if test="userBillChargeback.userBillChargebackId!=null and userBillChargeback.userBillChargebackId!='' ">
        and t1.user_bill_chargeback_id=#{userBillChargeback.userBillChargebackId}
      </if>
      <if test="userBillChargeback.userBillId!=null and userBillChargeback.userBillId!='' ">
        and t1.user_bill_id=#{userBillChargeback.userBillId}
      </if>
      <if test="userBillChargeback.userId!=null and userBillChargeback.userId!='' ">
        and t1.user_id=#{userBillChargeback.userId}
      </if>
      <if test="userBillChargeback.queryTimeBegin!=null and userBillChargeback.queryTimeBegin!='' ">
        and t1.create_time &gt;=#{userBillChargeback.queryTimeBegin}
      </if>
      <if test="userBillChargeback.queryTimeEnd!=null and userBillChargeback.queryTimeEnd!='' ">
        and t1.create_time &lt;=#{userBillChargeback.queryTimeEnd}
      </if>
      <if test="userBillChargeback.userBillChargebackState!=null and userBillChargeback.userBillChargebackState!='' ">
        and t1.user_bill_chargeback_state=#{userBillChargeback.userBillChargebackState}
      </if>
      <if test="userBillChargeback.notPassReason!=null and userBillChargeback.notPassReason!='' ">
        and t1.not_pass_reason=#{userBillChargeback.notPassReason}
      </if>
      <if test="userBillChargeback.operatorId!=null and userBillChargeback.operatorId!='' ">
        and t1.operator_id=#{userBillChargeback.operatorId}
      </if>
   </where>
   </sql>
   <select id="findByConditions" resultMap="BaseResultMap">
       select t1.*,t2.from_call,t2.from_phone_number,t2.bill_num,t2.bill_state,t2.bill_pay_money,
       t2.bill_pay_moeny_rmb,t3.user_name,t3.user_phone ,t4.operator_name
       from myw_user_bill_chargeback t1 
       inner join myw_user_bill t2 on t1.user_bill_id=t2.user_bill_id
       inner join myw_user t3 on t2.to_user_id=t3.user_id 
       left join myw_operator t4 on t1.operator_id=t4.operator_id
       <include refid="findWhere"></include>
       order by 
       <choose>
       <when test="page.sort !=null and page.sort!='' ">
          ${page.sort}  ${page.order}
       </when >
       <otherwise>
       t1.create_time DESC
       </otherwise>
       </choose >
       limit #{page.page},#{page.rows}
   </select>

   <select id="findByConditionsCount" resultType="java.lang.Long">
      select count(1) from myw_user_bill_chargeback t1 
       inner join myw_user_bill t2 on t1.user_bill_id=t2.user_bill_id
       inner join myw_user t3 on t2.to_user_id=t3.user_id 
       inner join myw_operator t4 on t1.operator_id=t4.operator_id
      <include refid="findWhere"></include>
   </select>

   <insert id="save">
      insert into myw_user_bill_chargeback(user_bill_chargeback_id,user_bill_id,user_id,create_time,user_bill_chargeback_state,not_pass_reason,operator_id,approve_time) values(
         #{userBillChargeback.userBillChargebackId},
         #{userBillChargeback.userBillId},
         #{userBillChargeback.userId},
         #{userBillChargeback.createTime},
         #{userBillChargeback.userBillChargebackState},
         #{userBillChargeback.notPassReason},
         #{userBillChargeback.operatorId},
         #{userBillChargeback.approvalTime}
      )
   </insert>

   <update id="update">
      update myw_user_bill_chargeback set
      <if test="userBillChargeback.userBillId!=null and userBillChargeback.userBillId!='' ">
        user_bill_id=#{userBillChargeback.userBillId},
      </if>
      <if test="userBillChargeback.userId!=null and userBillChargeback.userId!='' ">
        user_id=#{userBillChargeback.userId},
      </if>
      <if test="userBillChargeback.createTime!=null and userBillChargeback.createTime!='' ">
        create_time=#{userBillChargeback.createTime},
      </if>
      <if test="userBillChargeback.userBillChargebackState!=null and userBillChargeback.userBillChargebackState!='' ">
        user_bill_chargeback_state=#{userBillChargeback.userBillChargebackState},
      </if>
      <if test="userBillChargeback.notPassReason!=null and userBillChargeback.notPassReason!='' ">
        not_pass_reason=#{userBillChargeback.notPassReason},
      </if>
      <if test="userBillChargeback.operatorId!=null and userBillChargeback.operatorId!='' ">
        operator_id=#{userBillChargeback.operatorId},
      </if>
      <if test="userBillChargeback.approvalTime!=null and userBillChargeback.approvalTime!='' ">
        approve_time=#{userBillChargeback.approvalTime},
      </if>
      <if test="userBillChargeback.userBillChargebackId!=null and userBillChargeback.userBillChargebackId!='' ">
        user_bill_chargeback_id=#{userBillChargeback.userBillChargebackId}
      </if>
      where user_bill_chargeback_id=#{userBillChargeback.userBillChargebackId}
   </update>

   <delete id="delete">
      DELETE FROM myw_user_bill_chargeback WHERE user_bill_chargeback_id=#{userBillChargeback.userBillChargebackId}
   </delete>


   <select id="findBillChargebackByUserId" resultMap="BaseResultMap">
       select t1.*,t2.from_call,t2.from_phone_number,t2.bill_num,t2.bill_state,t2.bill_pay_money,
       t2.bill_pay_moeny_rmb,t3.user_name,t3.user_phone ,t4.operator_name
       from myw_user_bill_chargeback t1 
       inner join myw_user_bill t2 on t1.user_bill_id=t2.user_bill_id
       inner join myw_user t3 on t2.to_user_id=t3.user_id 
       left join myw_operator t4 on t1.operator_id=t4.operator_id
       where user_bill_chargeback_id=#{userBillChargebackId}
   </select>
</mapper>