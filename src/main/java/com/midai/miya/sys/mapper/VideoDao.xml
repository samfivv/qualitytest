<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.midai.miya.sys.dao.VideoDao">
    <resultMap id="BaseResultMap" type="com.midai.miya.sys.model.Video">
			<id column="video_id" property="videoId" jdbcType="VARCHAR" />
			<id column="poly_vid" property="polyVid" jdbcType="VARCHAR" />
			<id column="not_pass_reason" property="notPassReason" jdbcType="VARCHAR" />
		    <result column="video_name" property="videoName"
			jdbcType="VARCHAR" />
			<result column="video_desc" property="videoDesc"
			jdbcType="VARCHAR" />
		    <result column="video_state" property="videoState"
			jdbcType="INTEGER" />
			<result column="video_lock" property="videoLock"
			jdbcType="INTEGER" />
			<result column="video_creator" property="videoCreator"
			jdbcType="VARCHAR" />
			<result column="video_lock_user_name" property="videoLockUserName"
			jdbcType="VARCHAR" />
			<result column="video_createTime" property="videoCreatetime"
			jdbcType="TIMESTAMP" />
			<result column="video_auditTime" property="videoAudittime"
			jdbcType="TIMESTAMP" />
			<result column="user_nickname" property="userName"
			jdbcType="VARCHAR" />
			<result column="interest_id" property="interestId"
			jdbcType="VARCHAR" />
			<result column="video_duration" property="videoDuration"
			jdbcType="VARCHAR" />
			
	</resultMap>


	<select id="findAllVideo" resultMap="BaseResultMap" >
		SELECT t2.user_nickname as userName,t1.video_lock as videoLock, t1.video_id as videoId,t1.video_name as videoName,t1.video_desc as videoDesc,
		t1.video_creator as videoCreator,t1.video_createTime as videoCreatetime,
		t1.video_auditTime as videoAudittime,t1.video_state as videoState,t1.poly_vid as polyVid
		from myw_video t1 INNER JOIN myw_user t2 on t1.video_creator=t2.user_id 
		<include refid="findVideoWhere"/>
		 order by 
	    <choose>
			<when test="page.sort !=null and page.sort!='' ">
			  		${page.sort}  ${page.order} 
			   </when >
			<otherwise>
			video_createTime DESC
			</otherwise>
	</choose >
		limit #{page.page},#{page.rows}
	</select>

	<select id="findVideoCount" resultType="java.lang.Long" >
		SELECT count(1) from myw_video t1 INNER JOIN myw_user t2 on t1.video_creator=t2.user_id
		<include refid="findVideoWhere"/>
	</select>
	<sql id="findVideoWhere">
	<where>
	    <if test="video.videoId !=null and video.videoId !='' ">
	    and t1.video_id like CONCAT('%',#{video.videoId},'%')
	    </if>
		<if test="video.videoName !=null and video.videoName!='' ">
	    and t1.video_name like CONCAT('%',#{video.videoName},'%')
	    </if>
	    <if test="video.userName !=null and video.userName!='' ">
	    and t2.user_nickname like CONCAT('%',#{video.userName},'%')
	    </if>
	     <if test="video.videoState !=null and video.videoState!='' or video.videoState==0">
	    and t1.video_state=#{video.videoState}
	     </if>
	    <if test="video.queryTimeBegin !=null and video.queryTimeBegin!='' ">
	    AND t1.video_createTime &gt;= #{video.queryTimeBegin} 
	    </if>
	    <if test="video.queryTimeEnd !=null and video.queryTimeEnd!='' ">
	    AND t1.video_createTime &lt;= #{video.queryTimeEnd} 
	    </if>
	     and t1.video_state !=4
	    </where>
	</sql>
	
	<select id="findVideoById" resultMap="BaseResultMap">
	   select t1.*,t2.not_pass_reason from myw_video t1 left join 
	   (SELECT tt.video_id,tt.not_pass_reason FROM
	   (SELECT t.video_id,t.not_pass_reason FROM myw_approval t where t.video_id=#{videoId} 
	   ORDER BY t.approval_time DESC )tt LIMIT 0,1) t2
		ON t1.video_id=t2.video_id where t1.video_id=#{videoId}
	</select>

	<insert id="addApproval" parameterType="com.midai.miya.sys.model.Approval">
		insert into myw_approval(
		approval_id,video_id,operator_id,approval_state,not_pass_reason,approval_time) 
		values(
		  #{approvalId},
		  #{videoId},
		  #{operatorId},
		  #{approvalState},
		  #{notPassReason},
		  #{approvalTime}
		)
	</insert>
	
	<update id="updateVideoState" parameterType="com.midai.miya.sys.model.Video">
	    update myw_video set 
	    video_state=#{videoState},
	     video_auditTime=#{videoAudittime},
	    video_lock=#{videoLock},
	    video_lock_user_name=#{videoLockUserName}
	    where video_id=#{videoId}
	    
	</update>
	
	<update id="update" parameterType="com.midai.miya.sys.model.Video">
	    update myw_video set 
	    video_lock=#{videoLock},
	    video_lock_user_name=#{videoLockUserName}
	     where video_id=#{videoId}
	</update>
	
	<sql id="findWhere">
	<where>
        <if test="approval.videoId!=null and approval.videoId!='' ">
        and t1.video_id like CONCAT('%',#{approval.videoId},'%')
        </if>
        <if test="approval.videoName!=null and approval.videoName!='' ">
        and t2.video_name like CONCAT('%',#{approval.videoName},'%')
        </if>
         <if test="approval.videoDesc!=null and approval.videoDesc!='' ">
        and t2.video_desc like CONCAT('%',#{approval.videoDesc},'%')
        </if>
         <if test="approval.operatorName!=null and approval.operatorName!='' ">
        and t3.operator_name like CONCAT('%',#{approval.operatorName},'%')
        </if>
        <if test="approval.approvalState!=null and approval.approvalState!='' ">
        and t1.approval_state=#{approval.approvalState}
        </if>
         <if test="approval.queryTimeBegin!=null and approval.queryTimeBegin!='' ">
        and t1.approval_time &gt;=#{approval.queryTimeBegin}
        </if>
         <if test="approval.queryTimeEnd!=null and approval.queryTimeEnd!='' ">
        and t1.approval_time &lt;=#{approval.queryTimeEnd}
        </if>
      </where>
	</sql>
	
	<select id="findApproval" resultType="com.midai.miya.sys.model.Approval">
	  SELECT t1.video_id as videoId, t2.video_name as videoName,t2.video_desc as videoDesc,t3.operator_name as operatorName,
	  t1.approval_time as approvalTime,t1.approval_state as approvalState,t1.not_pass_reason as notPassReason
      from myw_approval t1 
      INNER JOIN myw_video t2 ON t1.video_id=t2.video_id 
      INNER JOIN myw_operator t3 ON t1.operator_id=t3.operator_id 
      <include refid="findWhere"></include>
      order by 
	    <choose>
			<when test="page.sort !=null and page.sort!='' ">
			  		${page.sort}  ${page.order} 
			   </when >
			<otherwise>
			t1.approval_time DESC
			</otherwise>
	</choose >
      limit #{page.page},#{page.rows}
	</select>
	
	<select id="findApprovalCount" resultType="java.lang.Long">
	    select count(1)  from myw_approval t1 
      INNER JOIN myw_video t2 ON t1.video_id=t2.video_id 
      INNER JOIN myw_operator t3 ON t1.operator_id=t3.operator_id 
       <include refid="findWhere"></include>
	</select>
	
	
	<insert id="addMessage" parameterType="com.midai.miya.sys.model.Message">
	insert into myw_message(message_id,message_content,message_type,message_create_time,message_user_id
	,message_state)values(#{messageId},#{messageContent},#{messageType},#{messageCreateTime},
	#{messageUserId},#{messageState})
	</insert>
	
	<select id="findVideoByInterestId" resultMap="BaseResultMap">
	   SELECT * FROM myw_video WHERE interest_id=#{interestId}
	</select>
	
	<update id="updateVideoStateByInterestId" parameterType="com.midai.miya.sys.model.Video">
	    update myw_video set 
	    video_state=#{videoState},
	    video_auditTime=NOW()
	    where interest_id=#{interestId}
	    
	</update>
</mapper>