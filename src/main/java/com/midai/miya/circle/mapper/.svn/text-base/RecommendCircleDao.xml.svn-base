<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.midai.miya.circle.dao.RecommendCircleDao">
   <resultMap id="BaseResultMap"  type="com.midai.miya.circle.model.RecommendCircle">
         <id column="recommend_circle_id"  property="recommendCircleId" jdbcType="VARCHAR" />
         <result column="recommend_circle_sort"  property="recommendCircleSort" jdbcType="INTEGER" />
         <result column="circle_id"  property="circleId" jdbcType="VARCHAR" />
         <result column="circle_name"  property="circleName" jdbcType="VARCHAR" />
   </resultMap>
   <sql id="findWhere">
   <where>
   and t2.circle_state=1
      <if test="recommendCircle.recommendCircleId!=null and recommendCircle.recommendCircleId!='' ">
        and t1.recommend_circle_id=#{recommendCircle.recommendCircleId}
      </if>
      <if test="recommendCircle.recommendCircleSort!=null and recommendCircle.recommendCircleSort!='' ">
        and t1.recommend_circle_sort=#{recommendCircle.recommendCircleSort}
      </if>
      <if test="recommendCircle.circleId!=null and recommendCircle.circleId!='' ">
        and t1.circle_id=#{recommendCircle.circleId}
      </if>
   </where>
   </sql>
   <select id="findByConditions" resultMap="BaseResultMap">
       select t1.*,t2.circle_name from myw_recommend_circle t1 
       inner join myw_circle t2 on t1.circle_id=t2.circle_id
       <include refid="findWhere"></include>
       order by 
       <choose>
       <when test="page.sort !=null and page.sort!='' ">
          ${page.sort}  ${page.order}
       </when >
       <otherwise>
       t1.recommend_circle_sort 
       </otherwise>
       </choose >
       limit #{page.page},#{page.rows}
   </select>

   <select id="findByConditionsCount" resultType="java.lang.Long">
      select count(1) from myw_recommend_circle t1 inner join myw_circle t2 on t1.circle_id=t2.circle_id
      <include refid="findWhere"></include>
   </select>

   <insert id="save">
      insert into myw_recommend_circle(recommend_circle_id,recommend_circle_sort,circle_id) values(
         #{recommendCircle.recommendCircleId},
         #{recommendCircle.recommendCircleSort},
         #{recommendCircle.circleId}
      )
   </insert>

   <update id="update">
      update myw_recommend_circle set
      <if test="recommendCircle.recommendCircleSort!=null and recommendCircle.recommendCircleSort!='' ">
        recommend_circle_sort=#{recommendCircle.recommendCircleSort},
      </if>
      <if test="recommendCircle.circleId!=null and recommendCircle.circleId!='' ">
        circle_id=#{recommendCircle.circleId},
      </if>
       <if test="recommendCircle.recommendCircleId!=null and recommendCircle.recommendCircleId!='' ">
        recommend_circle_id=#{recommendCircle.recommendCircleId}
      </if>
      where  recommend_circle_id=#{recommendCircle.recommendCircleId}
   </update>

   <delete id="delete">
      DELETE FROM myw_recommend_circle WHERE recommend_circle_id=#{recommendCircle.recommendCircleId}
   </delete>


   <select id="findRecommendCircleById" resultMap="BaseResultMap">
        select t1.*,t2.circle_name from myw_recommend_circle t1 inner join myw_circle t2 on t1.circle_id=t2.circle_id
        where  t1.recommend_circle_id=#{recommendCircleId}
   </select>
   
   <select id="findRecommendCircleCountById" resultType="java.lang.Integer">
       select count(1) from myw_recommend_circle where circle_id = #{recommendCircle.circleId}
       <if test="recommendCircle.recommendCircleId!=null and recommendCircle.recommendCircleId!='' ">
      and recommend_circle_id &lt;&gt; #{recommendCircle.recommendCircleId}
       </if>
   </select>
</mapper>